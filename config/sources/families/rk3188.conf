ARCH=armhf
BOOTSCRIPT=""
BOOTBRANCH='tag:v2020.10'
BOOTPATCHDIR="u-boot-arm-64"

#BOOTSIZE=512
#BOOTFS_TYPE=fat
SERIALCON=ttyS2

BOOTDELAY=0
OVERLAY_PREFIX='rockchip'

UBOOT_TARGET_MAP=";;idbloader.bin u-boot.img"
#UBOOT_TARGET_MAP=";;$SRC/packages/blobs/rockchip/rk3288_boot.bin u-boot-rockchip-with-spl.bin"

GOVERNOR="ondemand"
CPUMIN="600000"
CPUMAX="1900000"

case $BRANCH in
	legacy)
	OFFSET=64
	SERIALCON=ttyS2

	KERNELDIR='linux-arm-32-legacy'
	KERNELSOURCE='https://github.com/150balbes/rockchip-kernel'
	KERNELBRANCH='branch:5.6'
	;;

	current)
	KERNELDIR='linux-current'
	KERNELSOURCE='https://github.com/150balbes/linux-arm'
	KERNELBRANCH='branch:master'
#	KERNELSOURCE='https://github.com/150balbes/kernel-arm'
#	KERNELBRANCH='branch:rk3188'

##	KERNELSOURCE='https://github.com/150balbes/rockchip-kernel'
#	KERNELBRANCH='branch:test'
##	KERNELBRANCH='branch:rk3188'
#	EXTRAWIFI="no"
	EXTRAWIFI_LOCAL="yes"
	;;

	dev)
	KERNELDIR=$MAINLINE_KERNEL_DIR
	KERNELSOURCE=$MAINLINE_KERNEL_SOURCE
	KERNELBRANCH='branch:master'
	EXTRAWIFI="no"
	SCR_ENV="dev-extlinux.conf"
	;;
esac

write_uboot_platform()
    {
	dd if=$1/idbloader.bin of=$2 bs=32k seek=1 conv=notrunc status=none >/dev/null 2>&1
	dd if=$1/u-boot.img of=$2 bs=64k seek=128 conv=notrunc status=none >/dev/null 2>&1

#	dd if=$SRC/$BOARD_DIR/u-boot/u-boot-rk3188/idbloader.bin of=$2 bs=32k seek=1 conv=notrunc status=none >/dev/null 2>&1
#	dd if=$SRC/$BOARD_DIR/u-boot/u-boot-rk3188/u-boot.img of=$2 bs=64k seek=128 conv=notrunc status=none >/dev/null 2>&1


    }

uboot_custom_postprocess()
    {
		if [ "$(uname -m)" = "aarch64" ]; then
			if [ "$(lsb_release -sc)" = "focal" ]; then
				PKG_PREFIX="qemu-x86_64-static "
			else
				PKG_PREFIX="qemu-x86_64 "
			fi
		else
			PKG_PREFIX=""
		fi

		RKBIN_DIR="$SRC/cache/sources/rkbin-tools"
		BOOT_USE_BLOBS=yes
		BOOT_SOC=rk3188

		DDR_BLOB=spl/u-boot-spl.bin
		MINILOADER_BLOB=u-boot-encrypted.bin

		local tempfile=$(mktemp)

		truncate -s %2048 u-boot.bin

		cat u-boot.bin | split -b 512 --filter='openssl rc4 -K 7C4E0304550509072D2C7B38170D1711' > "$MINILOADER_BLOB"

		mkimage -n $BOOT_SOC -T rksd -d $DDR_BLOB idbloader.bin
		cat $MINILOADER_BLOB >> idbloader.bin

#		$PKG_PREFIX$RKBIN_DIR/tools/loaderimage --pack --uboot ./u-boot-dtb.bin uboot.img 0x0

#    PKG_DATAFILE="spl/u-boot-spl.bin"
#    PKG_LOADER="u-boot-encrypted.bin"
#    truncate -s %2048 u-boot.bin
#    cat u-boot.bin | split -b 512 \
#      --filter='openssl rc4 -K 7C4E0304550509072D2C7B38170D1711' > "$PKG_LOADER"
#		mkimage -n $BOOT_SOC -T rksd -d $PKG_DATAFILE idbloader.bin
#		cat $PKG_LOADER >> idbloader.bin
    }

family_tweaks()
{
	# enable root login via the serial console  ttys2 may be deprecated
	echo "ttyS2" >> $SDCARD/etc/securetty

#	cp $SRC/packages/bsp/mpv/mpv_mainline.conf $SDCARD/etc/mpv/mpv.conf

}
